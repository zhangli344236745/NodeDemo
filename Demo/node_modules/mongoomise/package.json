{
  "name": "mongoomise",
  "description": "promisify mongoose by any promise library",
  "version": "0.0.7",
  "keywords": [
    "promise",
    "promises-aplus",
    "mongoose"
  ],
  "homepage": "https://github.com/simongfxu/mongoomise",
  "repository": {
    "type": "git",
    "url": "https://github.com/simongfxu/mongoomise"
  },
  "license": "MIT",
  "author": {
    "name": "simonxu",
    "email": "xugaofan@gmail.com",
    "url": "https://github.com/simongfxu"
  },
  "devDependencies": {
    "bluebird": "2.1.3",
    "es6-promise": "^1.0.0",
    "lodash": "2.4.1",
    "mongoose": "3.8.12",
    "q": "1.0.1",
    "rsvp": "3.0.9",
    "should": "4.0.4",
    "when": "3.3.1",
    "async": "0.9.0"
  },
  "dependencies": {
    "lodash": "2.4.1"
  },
  "readmeFilename": "README.md",
  "main": "./src/main.js",
  "scripts": {
    "test": "mocha ./test/mocha",
    "benchmark": "node benchemark/index"
  },
  "readme": "# mongoomise\n\npromisify mongoose by any promise library\n \n## Support list\n\n* [bluebird](https://github.com/petkaantonov/bluebird)\n* [Q](https://github.com/kriskowal/q)\n* [when.js](https://github.com/cujojs/when)\n* [RSVP](https://github.com/tildeio/rsvp.js)\n* [es6-promise](https://github.com/jakearchibald/es6-promise)\n\n## mongoose basics\n\n> * your models extends from mongoose.Model\n> * mongoose.models.ModelName equals to mongoose.model('ModelName')\n> * ModelName.schema equals to mongoose.modelSchemas.ModelName\n> * static methods should be extended on mongoose.Model with a dynamic context\n> * instance methods should be extended on mongoose.Model.prototype\n> * custom model static methods are stored in MyModel.schema.statics \n\n## Usage\n\n```javascript\n\nvar mongoose = require('mongoose')\n\n// load your models first\n//...\n\n// choose your fav library\nrequire('mongoomise').promisifyAll(mongoose, require('bluebird'))\n// require('mongoomise').promisifyAll(mongoose, require('q'))\n// require('mongoomise').promisifyAll(mongoose, require('rsvp'))\n// require('mongoomise').promisifyAll(mongoose, require('when'))\n\n// start flying\nUser.findOneAsync().then(function(user){\n\tuser.pv += 1\n\treturn user.saveAsync()\n}).then(function(results){\n\tconsole.log(results)\n})\n\n ```\n \n## Notes\n\n* Do I have to change my existing  mongoose related code? No, just follow your old style.\n* Does hooks like Schema.pre work as usual? Yes. some useful discussion [here](https://github.com/yamadapc/mongoose-bluebird-utils/issues/1)\n* Does it support custom model static method? Yes!\n* mongoomise.promisifyAll should be invoked `after` all models are `loaded`\n\n## Test\n\n```bash\n\nmocha ./test/mocha\n\n```\n\n## Benchmark\n\n```bash\n\nnode benchmark/index\n\n```\nthe benchmark contains:\n\n> * bluebird - using bluebird.promisifyAll(mongoose)\n> * mongoomise/bluebird - using mongoomise with bluebird\n> * mongoomise/Q - using mongoomise with Q\n> * mongoomise/RSVP - using mongoomise with RSVP\n> * mongoomise/when - using mongoomise with when.js\n> * mongoomise/es6Promise - using mongoomise with es6-promise\n\nin my MacAir, mongoomise/bluebird win the champion.\n\n\n\n",
  "bugs": {
    "url": "https://github.com/simongfxu/mongoomise/issues"
  },
  "_id": "mongoomise@0.0.7",
  "_shasum": "2de7363a46e3e4e77a415af4b4bc794798efb1f7",
  "_from": "mongoomise@*",
  "_resolved": "https://registry.npmjs.org/mongoomise/-/mongoomise-0.0.7.tgz"
}
